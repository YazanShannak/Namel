version: '2'

services:
  zookeeper:
    image: 'bitnami/zookeeper:3'
    container_name: zookeeper
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka
  kafka:
    image: 'bitnami/kafka:2'
    container_name: kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
    depends_on:
      - zookeeper
    networks:
      - kafka
    restart: always
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - '9000:9000'
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
      - JVM_OPTS=-Xms32M -Xmx64M
      - SERVER_SERVLET_CONTEXTPATH=/
    networks:
      - kafka
    depends_on:
      - zookeeper
      - kafka
  redis:
    image: redislabs/rebloom:latest
    container_name: redis
    ports:
    - '6379:6379'
    networks:
      - kafka


#  ksqldb-server:
#    image: confluentinc/ksqldb-server:0.8.1
#    hostname: ksqldb-server
#    container_name: ksqldb-server
#    ports:
#      - "8088:8088"
#    environment:
#      KSQL_LISTENERS: http://0.0.0.0:8088
#      KSQL_BOOTSTRAP_SERVERS: kafka:9092
#      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
#    networks:
#      - kafka
#    depends_on:
#      - kafka
#
#  ksqldb-cli:
#    image: confluentinc/ksqldb-cli:0.8.1
#    container_name: ksqldb-cli
#    depends_on:
#      - ksqldb-server
#      - kafka
#    entrypoint: /bin/sh
#    tty: true
#    networks:
#      - kafka



volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  kafka:
